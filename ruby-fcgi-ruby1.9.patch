 ext/fcgi/fcgi.c |   23 +++++++++++++----------
 1 files changed, 13 insertions(+), 10 deletions(-)

diff --git a/ext/fcgi/fcgi.c b/ext/fcgi/fcgi.c
index 8539890..0e26b79 100755
--- a/ext/fcgi/fcgi.c
+++ b/ext/fcgi/fcgi.c
@@ -222,7 +222,7 @@ static VALUE fcgi_stream_write(VALUE self, VALUE str)
   rb_secure(4);
   Data_Get_Struct(self, FCGX_Stream, stream);
   str = rb_obj_as_string(str);
-  len = FCGX_PutStr(RSTRING(str)->ptr, RSTRING(str)->len, stream);
+  len = FCGX_PutStr(RSTRING_PTR(str), RSTRING_LEN(str), stream);
   if (len == EOF) CHECK_STREAM_ERROR(stream);
   return INT2NUM(len);
 }
@@ -266,16 +266,19 @@ static VALUE fcgi_stream_printf(int argc, VALUE *argv, VALUE out)
 
 static VALUE fcgi_stream_puts _((int, VALUE*, VALUE));
 
-static VALUE fcgi_stream_puts_ary(VALUE ary, VALUE out)
+static VALUE fcgi_stream_puts_ary(VALUE ary, VALUE out, int recur)
 {
   VALUE tmp;
   int i;
 
-  for (i=0; i<RARRAY(ary)->len; i++) {
-    tmp = RARRAY(ary)->ptr[i];
-    if (rb_inspecting_p(tmp)) {
-      tmp = rb_str_new2("[...]");
-    }
+  if (recur) {
+    tmp = rb_str_new2("[...]");
+    fcgi_stream_puts(1, &tmp, out);
+    return Qnil;
+  }
+
+  for (i=0; i<RARRAY_LEN(ary); i++) {
+    tmp = RARRAY_PTR(ary)[i];
     fcgi_stream_puts(1, &tmp, out);
   }
   return Qnil;
@@ -297,7 +300,7 @@ static VALUE fcgi_stream_puts(int argc, VALUE *argv, VALUE out)
       line = rb_str_new2("nil");
       break;
     case T_ARRAY:
-      rb_protect_inspect(fcgi_stream_puts_ary, argv[i], out);
+      rb_exec_recursive(fcgi_stream_puts_ary, argv[i], out);
       continue;
     default:
       line = argv[i];
@@ -305,7 +308,7 @@ static VALUE fcgi_stream_puts(int argc, VALUE *argv, VALUE out)
     }
     line = rb_obj_as_string(line);
     fcgi_stream_write(out, line);
-    if (RSTRING(line)->ptr[RSTRING(line)->len-1] != '\n') {
+    if (RSTRING_PTR(line)[RSTRING_LEN(line)-1] != '\n') {
       fcgi_stream_write(out, rb_default_rs);
     }
   }
@@ -379,7 +382,7 @@ static VALUE fcgi_stream_gets(VALUE self)
     rb_str_cat(str, buff, strlen(buff));
     if (strchr(buff, '\n')) break;
   }
-  if (RSTRING(str)->len > 0)
+  if (RSTRING_LEN(str) > 0)
     return str;
   else
     return Qnil;
